
function injectJs(text) {
	var scr = document.createElement('script');
	scr.type="text/javascript";
	scr.textContent=text;
	document.documentElement.appendChild(scr);
}

injectJs('var Authentication = new Object();\n\nvar default_iptvcfg = {\n	\"_version\"		: 3,  //added this value to force reload\n\n	//You must at least fill below items and re-run it\n	//\"UserID\"		: \"\",\n	//\"_passwd\"		: \"\",\n	//\"STBID\"			: \"\",\n	//\"mac\"			: \"\",\n	\n	\"_passwdMd5\"	: true,\n	\"_ip\"			: \"192.168.1.1\",\n	\"SupportHD\"		: 1,\n	\"STBType\"		: \"EC2108B_pub\",\n	\"STBVersion\"	: \"SBox8600\",\n	\"templateName\"	: \"defaultwebkit\",\n	\"boot_version\"	: 86122334,\n	\"hardware_type\"	: \"EC2108B_pub\",\n	\"ConnectType\"	: 2,\n	\"areaid\"		: 860755,\n	\"UserGroupNMB\"	: -1,\n	\"PackageIDs\"	: -1,\n};\n\nvar values = localStorage.getItem(\"iptv_settings\");\nvar iptvcfg = JSON.parse(values)\nif (iptvcfg == undefined) {\n	console.log(\"No data,use default_iptvcfg!\")\n	iptvcfg = default_iptvcfg;\n}else if(iptvcfg[\"_version\"] != default_iptvcfg[\"_version\"]) {\n	console.log(\"Version changed \"+iptvcfg[\"_version\"]+\"->\"+default_iptvcfg[\"_version\"]+\",use default_iptvcfg!\")\n	iptvcfg = default_iptvcfg;\n}\n\nchrome.extension.sendMessage({text:\"getStuff\"},function(reponse){\n  //This is where the stuff you want from the background page will be\n  if(reponse.type == \"test\")\n    alert(\"Test received\");\n});\n\nfunction chars_from_hex(inputstr) {\n	var outputstr = \'\';\n	inputstr = inputstr.replace(/^(0x)?/g, \'\');\n	inputstr = inputstr.replace(/[^A-Fa-f0-9]/g, \'\');\n	inputstr = inputstr.split(\'\');\n	for(var i=0; i<inputstr.length; i+=2) {\n		outputstr += String.fromCharCode(parseInt(inputstr[i]+\'\'+inputstr[i+1], 16));\n	}\n	return outputstr;\n}\n\nfunction hex_from_chars(inputstr) {\n	var delimiter = \'\';\n	var outputstr = \'\';\n	var hex = \"0123456789abcdef\";\n	hex = hex.split(\'\');\n	var i, n;\n	var inputarr = inputstr.split(\'\');\n	for(var i=0; i<inputarr.length; i++) {\n		if(i > 0) outputstr += delimiter;\n		//if(!delimiter && i % 32 == 0 && i > 0) outputstr += \'\\n\';\n		n = inputstr.charCodeAt(i);\n		outputstr += hex[(n >> 4) & 0xf] + hex[n & 0xf];\n	}\n	return outputstr;\n}\n\nfunction buildpasswd() {\n	psw = \"\"\n	if(iptvcfg._passwdMd5) {\n		md5_init();\n		var len = iptvcfg._passwd.length;\n    	for (i = 0; i < len; i++) {\n    		var ch = iptvcfg._passwd.charCodeAt(i);\n			md5_update(ch);\n	    }\n		md5_finish();\n\n		var hex = \"0123456789ABCDEF\";\n		hex = hex.split(\'\');\n    	for (i = 0; i < digestBits.length; i++) {\n    		psw += hex[(digestBits[i] >> 4) & 0xf] + hex[digestBits[i] & 0xf]\n	    }\n	    //console.log(\"psw=\"+psw);\n		//for(i=0; i<psw.length; i++) {\n		//	console.log(\"psw.charCodeAt(i)=\"+psw.charCodeAt(i));\n		//}\n\n    	return psw;\n	}\n}\n\n\nAuthentication.CTCSetConfig = function(key,value) {	\n	console.log(\"set [[[\"+key+\"]]]=[[[\"+value+\"]]]\");\n	iptvcfg[key] = value;\n	window.localStorage.setItem(\"iptv_settings\",JSON.stringify(iptvcfg));\n};\n\n\nAuthentication.CTCGetConfig = function(key) {\n	var value = \"\";\n	if (iptvcfg[key] != undefined) {\n		value = iptvcfg[key];\n	}\n	console.log(\"get [[[\"+key+\"]]]=[[[\"+value+\"]]]\");\n	return value;\n};\n\nAuthentication.CTCGetAuthInfo = function(EncryptToken) {\n	psw = buildpasswd();\n	var random = Math.floor(Math.random()*1000000);\n	var UserID = Authentication.CTCGetConfig(\"UserID\");\n	var STBID = Authentication.CTCGetConfig(\"STBID\");\n	var IP = Authentication.CTCGetConfig(\"_ip\");\n	var MAC = Authentication.CTCGetConfig(\"mac\");\n	var Reserved = \"\";\n	var CTC = \"CTC\";\n	var input = random + \"$\" + EncryptToken + \"$\" + UserID + \"$\" + STBID + \"$\" + IP + \"$\" + MAC + \"$\" + Reserved + \"$\" + CTC\n	console.log(\"CTCGetAuthInfo(\"+input+\")\")\n	var output = des(psw, input, 1, null, null,1);\n	output = hex_from_chars(output);\n	console.log(\"output=\"+output)\n	return output;\n};\n\nAuthentication.CTCStartUpdate = function() {\n	console.log(\"CTCStartUpdate\");\n}\n\n\nfunction MediaPlayer() {\n	this.leaveChannel = new function() {\n		console.log(\"MediaPlayer.leaveChannel\");\n	}\n}\n');

